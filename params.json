{
  "name": "Tutorial Coco2d",
  "tagline": "Nadie lee esto, ¡hey! ¡no leas aqui!",
  "body": "# Bienvenidos al tutorial de CoCo2d-x.\r\n\r\n## Este tutorial sirve para la instalación de coco2d-x para windows y uso en Visual Studio\r\n## Este tutorial tiene como proposito explicar el uso de sprites en coco2d-x asi como algunos ejemplos basicos\r\n\r\n## Prequisitos\r\n\r\n- Sistema Operativo Windows 7 o posterior\r\n- Visual Studio 2013 o posterior\r\n- Compilador Python 2.X\r\n\r\nPython se puede descargar desde el siguiente enlace [https://www.python.org/downloads/](https://www.python.org/downloads/)\r\n\r\n## Instalación\r\n1. Descargamos [Coco2d-x](https://www.python.org/downloads/) desde la pagina original o si se desea ver [Github](https://github.com/cocos2d/cocos2d-x). Despues de esto descomprimimos y lo guardamos en donde queramos.\r\n\r\n2. Usado los símbolos de sistemas (cmd) procedemos a buscar la carpeta donde guardamos, y ejecutamos \"Python setup.py\". Tambien pueden ir manualmente usando el explorador y ejecutarla setup.\r\n\r\n3. Una vez que se ejecuto, cerramos la carpeta o el cmd y volvemos a abrir otro cmd, esto es ya que pide la restauración del cmd para utilizar el nuevo comando \"cocos\". Una vez que ejecutamos cocos, nos pedira una verificación si es la primera vez que lo ejecutamos, escogemos [y]es y ya esta listo para utilizarse.\r\n\r\n## Creación del primer programa, ejemplo de hello world\r\n\r\n1. Accedemos nuevamente a cmd y ejecutamos \"cocos new -l cpp nombreproyecto -d C:\\...\" donde  '-l cpp' se declara que es un archivo de c++ con proyecto llamado 'nombreproyecto', y el '-d C:\\...' escogemos en donde queremos que este se guarde.\r\nSi se quiere trabaja con proyectos tipo javascript o lua declaramos 'js' o 'lua' en vez de 'cpp'.\r\n\r\n2. Ya que termino de crear el proyecto, abrimos la ubicacion de la carpeta destino con el explorador y nos direjimos a la carpeta \"coco2d\" y posteriormente a la carpeta \"proj.win32\", ahi encontramos archivos ejecutables para VisualStudio (VS), y ejecutamos \"nombreproyecto.sln\"\r\n\r\n3.- Una vez dentro de VS simplemente usamos el boton \"local windows debugger\" o simplemente \"debugger\" (el nombre del botón depende de la version del VS, de la configuracion de), tambien puedes precionar F5, una vez hecho esto confirmamos que queremos ejecutar las clases mencionadas y esperamos a que compile, puede tardar hasta media hora e incluso pediera descargar algunos componentes.\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}